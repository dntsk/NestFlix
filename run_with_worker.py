#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Django —Å–µ—Ä–≤–µ—Ä–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∑–∞–ø—É—Å–∫–æ–º –≤–æ—Ä–∫–µ—Ä–∞ —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á.
"""
import os
import sys
import subprocess
import signal
import time
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ Python path
BASE_DIR = Path(__file__).resolve().parent
sys.path.insert(0, str(BASE_DIR))

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'movie_tracker.settings')

import django
django.setup()

def run_server_and_worker():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Django —Å–µ—Ä–≤–µ—Ä –∏ –≤–æ—Ä–∫–µ—Ä —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ."""

    print("üöÄ –ó–∞–ø—É—Å–∫ Django —Å–µ—Ä–≤–µ—Ä–∞ —Å –≤–æ—Ä–∫–µ—Ä–æ–º —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á...")
    print("=" * 60)

    # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞
    server_cmd = [sys.executable, 'manage.py', 'runserver']
    worker_cmd = [sys.executable, 'manage.py', 'process_tasks', '--dev']

    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Ä–∫–µ—Ä –≤ —Ñ–æ–Ω–µ
    print("üìã –ó–∞–ø—É—Å–∫ –≤–æ—Ä–∫–µ—Ä–∞ —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á...")
    worker_process = subprocess.Popen(
        worker_cmd,
        cwd=BASE_DIR,
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE,
        text=True
    )

    # –î–∞–µ–º –≤–æ—Ä–∫–µ—Ä—É –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫
    time.sleep(2)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–æ—Ä–∫–µ—Ä –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
    if worker_process.poll() is None:
        print("‚úÖ –í–æ—Ä–∫–µ—Ä —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á –∑–∞–ø—É—â–µ–Ω")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≤–æ—Ä–∫–µ—Ä–∞")
        stdout, stderr = worker_process.communicate()
        print("stdout:", stdout)
        print("stderr:", stderr)
        return

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    print("üåê –ó–∞–ø—É—Å–∫ Django —Å–µ—Ä–≤–µ—Ä–∞...")
    print("=" * 60)

    def signal_handler(signum, frame):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤."""
        print("\nüõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...")
        worker_process.terminate()
        worker_process.wait()
        print("‚úÖ –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã")
        sys.exit(0)

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)

    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä (–±–ª–æ–∫–∏—Ä—É—é—â–∏–π –≤—ã–∑–æ–≤)
        server_process = subprocess.run(server_cmd, cwd=BASE_DIR)
    except KeyboardInterrupt:
        signal_handler(signal.SIGINT, None)
    finally:
        # –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤–æ—Ä–∫–µ—Ä–∞
        if worker_process.poll() is None:
            worker_process.terminate()
            worker_process.wait()

if __name__ == '__main__':
    run_server_and_worker()